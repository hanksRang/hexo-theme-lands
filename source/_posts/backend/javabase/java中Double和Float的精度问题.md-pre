---
title: java中Double和Float的精度问题
date: 2022-08-13 07:52:31
author: hanks
category:
- cs
- hardware

tags: java中Double和Float的精度问题

---

**Java中Float和Double的精度问题**
<p>网上看了很多关于这个问题的解释，但是基本没有能说清楚这个问题的。下面是我个人对这个问题的一点看法。
</p>

**两个基本点**

float的小数位只有23位，即二进制的23位，能表示的最大的十进制数为2的23次方，即8388608，即十进制的7位。
double的小数位有52位，对应十进制最大值为4 503 599 627 370 496，这个数有16位。

*以上这两句话应该没有异议*

主要的争议点在于精度的表示问题上，为何float只取6位，double只取15位，是不是就简单理解为十进制表示上限的位数-1？下面深入来分析一下这个问题。

**浮点数的存储结构**

Java中的Float：1位符号位，8位指数位，23位尾数，尾数直接体现了数字的精度，2 ^ 23 = 8388608个整数，及从0到8388607的整数。
这句话什么意思？意思是浮点数的尾数是以10进制整数的形式存储在这23位尾数位里面。这里不能理解为尾数存储的
是小数。 

举例：小数3.141592
这个数如果用二进制小数，是无法精确表示的，11.0010010000111111001⋯，是一个无限循环小数。
表示成浮点数：则可用31415926 * 10 ^ (-6)

相反的，数字314159267用浮点数来表示，只能表示为3141592 * 10 ^ (2)，因为后两位已经超出精度范围（精度是所有
有效表示位数）。